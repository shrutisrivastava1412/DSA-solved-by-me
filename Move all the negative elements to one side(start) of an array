Method 1. using swap function with partition process - O(N)

#include<bits/stdc++.h>
using namespace std;

int main(){
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++) 
        cin>>arr[i];
        
    int i=-1;int j=0;

    for(j=0;j<n;j++){
        if(arr[j]<0){
            i++;
            swap(arr[i],arr[j]);
        }
    }
for(int i=0;i<n;i++) 
        cout<<arr[i]<<"  ";
return 0;
}


-----------------------------------------------------------------------------------------------------------------------
Method 2. DNF method using 2 pointers low and high

#include<bits/stdc++.h>
using namespace std;

int main(){
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++) 
        cin>>arr[i];
        
    int low =0; int high=n-1;
    
    while(low<high){
        if(arr[low]<0){
            low++;
        }
        else if(arr[high]>0){
            high--;
        }
        else
            swap(arr[low], arr[high]);
    }
for(int i=0;i<n;i++) 
        cout<<arr[i]<<" ";
return 0;
}
